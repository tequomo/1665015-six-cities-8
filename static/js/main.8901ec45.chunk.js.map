{"version":3,"sources":["const.ts","types/action.ts","store/action.ts","store/reducers/root-reducer.ts","services/adapter.ts","services/token.ts","services/api-actions.ts","store/reducers/user-auth/user-auth.ts","utils/utils.ts","store/reducers/offers-data/offers-data.ts","store/reducers/current-offer-data/current-offer-data.ts","store/reducers/nearby-data/nearby-data.ts","store/reducers/favorites-data/favorites-data.ts","store/reducers/reviews-data/reviews-data.ts","store/reducers/app-state/app-state.ts","store/reducers/app-state/selectors.ts","store/reducers/offers-data/selectors.ts","store/reducers/user-auth/selectors.ts","components/layout/auth/signout-block.tsx","components/layout/auth/auth.tsx","components/layout/logo/logo.tsx","components/layout/header/header.tsx","components/screens/loader/loader.tsx","components/layout/loader-wrapper/loader-wrapper.tsx","components/layout/locations/locations-item.tsx","components/layout/locations/locations.tsx","hooks/use-map.ts","components/layout/map/map.tsx","components/layout/favorite-button/favorite-button.tsx","components/layout/place-card/place-card-mark.tsx","components/layout/place-card/place-card.tsx","components/layout/offers-list/offers-list.tsx","components/layout/places-sort/places-sort.tsx","components/screens/main-screen/no-places.tsx","components/screens/main-screen/main-screen.tsx","components/screens/sign-in-screen/sign-in-screen.tsx","store/reducers/favorites-data/selectors.ts","components/layout/favorites-empty/favorites-empty.tsx","components/layout/favorite-card/favorite-card.tsx","components/layout/favorites-locations/favorites-locations.tsx","components/layout/favorites-list/favorites-list.tsx","components/layout/footer/footer.tsx","components/screens/favorites-screen/favorites-screen.tsx","store/reducers/reviews-data/selectors.ts","components/layout/rating-stars/rating-stars.tsx","components/layout/reviews-form/reviews-form.tsx","components/layout/reviews-list/reviews-item.tsx","components/layout/reviews-list/review-list.tsx","components/screens/offer-screen/goods-list.tsx","components/screens/offer-screen/gallery-item.tsx","components/screens/offer-screen/interior-gallery.tsx","store/reducers/nearby-data/selectors.ts","components/screens/offer-screen/offer-container.tsx","components/screens/not-found/not-found.tsx","store/reducers/current-offer-data/selectors.ts","components/screens/offer-screen/offer-screen.tsx","components/routes/private-route.tsx","components/app/app.tsx","browser-history.ts","store/middlewares/redirect.ts","index.tsx","services/api.ts"],"names":["AppRoute","AuthStatus","HttpCode","RatingName","PinIconUrl","CITIES","ReviewLength","APIRoute","LoadingStatus","CustomClasses","CitiesPlaces","listClassName","tabsClassName","cardClassName","wrapperClassName","buttonClassName","NearPlaces","NoPlaces","mainClassName","divClasName","PlacesSort","itemClassName","HeaderAuth","spanAuthClassName","spanNoAuthClassName","CurrentOffer","buttonFavoriteClassName","divProClassName","MainScreen","divCitiesClassName","FavoritesScreen","LocationsTab","SortingTypes","DEFAULT","PRICE_UP","PRICE_DOWN","TOP_RATED","ActionType","Messages","NameSpace","selectCity","createAction","SelectCity","selectedCity","payload","selectSorting","FilterOffers","offers","SelectSorting","currentSortingType","loadOffers","LoadOffers","loadCurrentOffer","LoadCurrentOffer","currentOffer","loadOfferReviews","LoadOfferReviews","offerReviews","setOffersLoadingStatus","SetOffersLoadingStatus","offersLoadingStatus","setCurrentOfferLoadingStatus","SetCurrentOfferLoadingStatus","currentOfferLoadingStatus","setOfferReviewsLoadingStatus","SetOfferReviewsLoadingStatus","offerReviewsLoadingStatus","setReviewLoadingStatus","SetReviewLoadingStatus","reviewLoadingStatus","setFavoriteOffersLoadingStatus","SetFavoriteOffersLoadingStatus","favoriteOffersLoadingStatus","setToggleIsFavoriteLoadingStatus","SetToggleIsFavoriteLoadingStatus","toggleIsFavoriteLoadingStatus","loadNearbyOffers","LoadNearbyOffers","nearbyOffers","setNearbyOffersLoadingStatus","loadFavoriteOffers","LoadFavoriteOffers","favoriteOffers","updateOffer","UpdateOffer","updatedOffer","requireAuthorization","RequireAuthorization","authStatus","requireLogout","RequireLogout","redirectToRoute","RedirectToRoute","url","receiveAuthData","ReceiveAuthData","authUserData","adaptSingleToClient","offer","bedrooms","city","description","goods","host","avatarUrl","id","isPro","name","images","isFavorite","isPremium","location","maxAdults","previewImage","price","rating","title","type","adaptMultipleToClient","data","map","adaptAuthDataToClient","adaptSomeReviewsToClient","review","comment","date","user","adaptReviewToClient","AUTH_TOKEN_KEY_NAME","toggleIsFavoriteAction","favoriteStatus","dispatch","_getState","api","a","post","Favorite","Succeeded","Failed","SignIn","toast","warning","fetchOfferReviewsAction","get","Reviews","initialState","Unknown","userAuth","createReducer","builder","addCase","state","action","NoAuth","capitalizeWord","word","charAt","toUpperCase","slice","getRatingWidth","Math","round","ratingValues","Array","fill","_","index","sort","b","getSelectedCityOffers","filter","getRandomItems","items","length","random","updateOffers","updateData","updateDataIndex","findIndex","checkIsValidUserReview","Min","Max","Idle","offersData","currentOfferData","nearbyOffersLoadingStatus","nearbyData","favoritesData","updateFavoritesList","reviewsData","appState","rootReducer","combineReducers","auth","reviews","getSelectedCity","getCurrentSortingType","getOffersLoadingStatus","getFilteredOffers","createSelector","getSortedOffers","sortingOffers","getAuthStatus","getAuthUserData","SignOutBlock","onSignOut","className","to","SignOut","onClick","Auth","useSelector","useDispatch","isAuth","Favorites","style","backgroundImage","borderRadius","email","e","preventDefault","delete","Logout","localStorage","removeItem","Logo","src","alt","width","height","Header","renderAuth","memo","Loader","LoaderWrapper","isLoad","children","LocationsItem","cityName","onLocationClick","href","Locations","onMenuItemClick","handleMouseClick","currentTarget","innerText","useMap","mapRef","useState","setMap","useEffect","current","instance","Map","center","lat","latitude","lng","longitude","zoom","layer","TileLayer","attribution","addLayer","setView","defaultPinIcon","Icon","iconUrl","Default","iconSize","iconAnchor","activePinIcon","Active","selectedOfferId","useRef","Marker","setIcon","addTo","forEach","ref","FavoriteButton","onFavoriteButtonClick","xlinkHref","PlaceCardMark","PlaceCard","onCardOver","onCardOut","customClasses","onMouseEnter","onMouseLeave","Offer","evt","OffersList","transferActiveOfferId","handleMouseEnter","useCallback","handleMouseLeave","keyValue","onSelectSorting","isOpened","setIsOpened","method","prevState","tabIndex","Object","values","stopPropagation","handleSortItemClick","fetchOffers","Hotels","error","setSelectedOfferId","currentSorting","SignInScreen","onLoginFormSubmit","authData","login","password","Login","token","setItem","Main","loginAction","loginRef","passwordRef","onSubmit","value","placeholder","required","onChange","setCustomValidity","test","reportValidity","getFavoriteOffers","getFavoriteOffersLoadingStatus","getFavoriteCities","Set","favorite","FavoritesEmpty","FavoriteCard","favoriteOffer","FavoritesLocations","locationOffers","FavoritesList","favoriteCities","Footer","fetchFavoriteOffers","getOfferReviewsLoadingStatus","getReviewLoadingStatus","getSortedOfferReviews","Date","getTime","RatingStars","onRatingChange","rank","checked","disabled","Loading","htmlFor","toLowerCase","initReviewState","ReviewsForm","isReviewLoading","postOfferReview","userReview","postOfferReviewAction","setUserReview","useParams","target","ReviewsItem","reviewDate","rawDate","toLocaleString","month","year","formatReviewDate","dashedDate","shownDate","dateTime","ReviewsList","paramsProps","fetchOfferReviews","GoodsList","good","GalleryItem","itemSource","InteriorGallery","galleryItems","getNearbyOffers","getNearbyOffersLoadingStatus","OfferContainer","fetchNearbyOffers","Nearby","fetchNearbyOffersAction","toggleIsFavorite","NotFoundScreen","viewBox","xmlns","fillRule","clipRule","d","getCurrentOffer","getCurrentOfferLoadingStatus","OfferScreen","fetchCurrentOffer","fetchCurrentOfferAction","PrivateRoute","exact","path","render","renderProps","App","Room","browserHistory","createBrowserHistory","redirect","_store","next","push","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","status","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","info","ReactDOM","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.8901ec45.chunk.js","sourcesContent":["import { ClassType } from './types/classes-type';\nimport { SortTypes } from './types/sort';\n\nexport enum AppRoute {\n  Main = '/',\n  SignIn = '/login',\n  SignOut = '/logout',\n  Favorites = '/favorites',\n  Room = '/offer/:id',\n  Offer = '/offer/',\n}\n\nexport enum AuthStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum HttpCode {\n  Ok = 200,\n  NoContent = 204,\n  BadRequest = 400,\n  Unauthorized = 401,\n  NotFound = 404,\n}\n\nexport enum RatingName {\n  'Terribly',\n  'Badly',\n  'Not bad',\n  'Good',\n  'Perfect',\n}\n\nexport const CITIES: string[] = [\n  'Paris',\n  'Cologne',\n  'Brussels',\n  'Amsterdam',\n  'Hamburg',\n  'Dusseldorf',\n];\n\nexport const DEFAULT_CITY = 'Paris';\n\nexport enum PinIconUrl {\n  Default = 'img/pin.svg',\n  Active = 'img/pin-active.svg',\n}\n\nexport const MAX_RATING_VALUE = 5;\n\nexport enum ReviewLength {\n  Min = 50,\n  Max = 300,\n}\n\nexport const CustomClasses: ClassType = {\n  CitiesPlaces: {\n    listClassName: 'cities__places-list',\n    tabsClassName: 'tabs__content',\n    cardClassName: 'cities__place-card',\n    wrapperClassName: 'cities__image-wrapper',\n    buttonClassName: 'place-card__bookmark-button--active',\n  },\n  NearPlaces: {\n    listClassName: 'near-places__list',\n    cardClassName: 'near-places__card',\n    wrapperClassName: 'near-places__image-wrapper',\n  },\n  NoPlaces: {\n    mainClassName: 'page__main--index-empty',\n    divClasName: 'cities__places-container--empty',\n  },\n  PlacesSort: {\n    listClassName: 'places__options--opened',\n    itemClassName: 'places__option--active',\n  },\n  HeaderAuth: {\n    spanAuthClassName: 'header__user-name user__name',\n    spanNoAuthClassName: 'header__login',\n  },\n  CurrentOffer: {\n    buttonFavoriteClassName: 'property__bookmark-button--active',\n    divProClassName: 'property__avatar-wrapper--pro',\n  },\n  MainScreen: {\n    mainClassName: 'page__main--index-empty',\n    divCitiesClassName: 'cities__places-container--empty',\n  },\n  FavoritesScreen: {\n    mainClassName: 'page__main--favorites-empty',\n  },\n  LocationsTab: {\n    itemClassName: 'tabs__item--active',\n  },\n};\n\nexport const SortingTypes: SortTypes =  {\n  DEFAULT: 'Popular',\n  PRICE_UP: 'Price: low to high',\n  PRICE_DOWN: 'Price: high to low',\n  TOP_RATED: 'Top rated first',\n};\n\nexport enum APIRoute {\n    Hotels = '/hotels',\n    Login = '/login',\n    Logout = '/logout',\n    Nearby = '/nearby',\n    Favorite = '/favorite',\n    Reviews = '/comments',\n}\n\nexport enum LoadingStatus {\n  Idle = 'idle',\n  Loading = 'loading',\n  Succeeded = 'succeeded',\n  Failed = 'failed',\n}\n\nexport const Messages = {\n  AUTH_FAIL: 'Please enter valid email and password',\n  AUTH_INFO: 'Don\\'t forget to sign in',\n  FAVORITE_NO_AUTH: 'You are not logged in',\n  REVIEW_POST_ERROR: 'Review sending failed',\n  OFFER_LOADING_ERROR: 'Offers loading failed',\n};\n","import { AxiosInstance } from 'axios';\nimport { Action } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { State } from './state';\n\nexport enum ActionType {\n  SelectCity = 'main/selectCity',\n  FilterOffers = 'main/filterOffers',\n  SelectSorting = 'main/selectSorting',\n  LoadOffers = 'data/loadOffers',\n  SetOffersLoadingStatus = 'data/setOffersLoadingStatus',\n  LoadCurrentOffer = 'data/loadCurrentOffer',\n  SetCurrentOfferLoadingStatus = 'data/setCurrentOfferLoadingStatus',\n  LoadOfferReviews = 'data/loadOfferReviews',\n  SetOfferReviewsLoadingStatus = 'data/setOfferReviewsLoadingStatus',\n  SendOfferReview = 'data/sendOfferReview',\n  SetReviewLoadingStatus = 'data/setReviewLoadingStatus',\n  LoadNearbyOffers = 'data/loadNearbyOffers',\n  SetNearbyOffersLoadingStatus = 'data/setNearbyOffersLoadingStatus',\n  LoadFavoriteOffers = 'data/loadFavoriteOffers',\n  SetFavoriteOffersLoadingStatus = 'data/setFavoriteOffersLoadingStatus',\n  ToggleIsFavorite = 'data/toggleFavorite',\n  SetToggleIsFavoriteLoadingStatus = 'data/setToggleIsFavoriteLoadingStatus',\n  RequireAuthorization = 'user/requireAuthorization',\n  ReceiveAuthData = 'user/receiveAuthData',\n  RequireLogout = 'user/requireLogout',\n  RedirectToRoute = 'main/redirectToRoute',\n  UpdateOffer = 'data/updateOffer',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n\nexport type ThunkAppDispatch = ThunkDispatch<State, AxiosInstance, Action>;\n","import { createAction } from '@reduxjs/toolkit';\nimport { AppRoute, AuthStatus, LoadingStatus } from '../const';\nimport { ActionType } from '../types/action';\nimport { AuthUserData } from '../types/auth-data';\nimport { OfferType } from '../types/offer-type';\nimport { ReviewType } from '../types/review-type';\n\n\nexport const selectCity = createAction(\n  ActionType.SelectCity,\n  (selectedCity:string) => ({\n    payload: selectedCity,\n  }),\n);\n\nexport const filterOffers = createAction(\n  ActionType.FilterOffers,\n  (offers: OfferType[]) => ({\n    payload: offers,\n  }),\n);\n\nexport const selectSorting = createAction(\n  ActionType.SelectSorting,\n  (currentSortingType: string) => ({\n    payload: currentSortingType,\n  }),\n);\n\nexport const loadOffers = createAction(\n  ActionType.LoadOffers,\n  (offers: OfferType[]) => ({\n    payload: offers,\n  }),\n);\n\nexport const loadCurrentOffer = createAction(\n  ActionType.LoadCurrentOffer,\n  (currentOffer: OfferType) => ({\n    payload: currentOffer,\n  }),\n);\n\nexport const loadOfferReviews = createAction(\n  ActionType.LoadOfferReviews,\n  (offerReviews: ReviewType[]) => ({\n    payload: offerReviews,\n  }),\n);\n\nexport const setOffersLoadingStatus = createAction(\n  ActionType.SetOffersLoadingStatus,\n  (offersLoadingStatus: LoadingStatus) => ({\n    payload: offersLoadingStatus,\n  }),\n);\n\nexport const setCurrentOfferLoadingStatus = createAction(\n  ActionType.SetCurrentOfferLoadingStatus,\n  (currentOfferLoadingStatus: LoadingStatus) => ({\n    payload: currentOfferLoadingStatus,\n  }),\n);\n\nexport const setOfferReviewsLoadingStatus = createAction(\n  ActionType.SetOfferReviewsLoadingStatus,\n  (offerReviewsLoadingStatus: LoadingStatus) => ({\n    payload: offerReviewsLoadingStatus,\n  }),\n);\n\nexport const setReviewLoadingStatus = createAction(\n  ActionType.SetReviewLoadingStatus,\n  (reviewLoadingStatus: LoadingStatus) => ({\n    payload: reviewLoadingStatus,\n  }),\n);\n\nexport const setFavoriteOffersLoadingStatus = createAction(\n  ActionType.SetFavoriteOffersLoadingStatus,\n  (favoriteOffersLoadingStatus: LoadingStatus) => ({\n    payload: favoriteOffersLoadingStatus,\n  }),\n);\n\nexport const setToggleIsFavoriteLoadingStatus = createAction(\n  ActionType.SetToggleIsFavoriteLoadingStatus,\n  (toggleIsFavoriteLoadingStatus: LoadingStatus) => ({\n    payload: toggleIsFavoriteLoadingStatus,\n  }),\n);\n\nexport const loadNearbyOffers = createAction(\n  ActionType.LoadNearbyOffers,\n  (nearbyOffers: OfferType[]) => ({\n    payload: nearbyOffers,\n  }),\n);\n\nexport const setNearbyOffersLoadingStatus = createAction(\n  ActionType.SetToggleIsFavoriteLoadingStatus,\n  (toggleIsFavoriteLoadingStatus: LoadingStatus) => ({\n    payload: toggleIsFavoriteLoadingStatus,\n  }),\n);\n\nexport const loadFavoriteOffers = createAction(\n  ActionType.LoadFavoriteOffers,\n  (favoriteOffers: OfferType[]) => ({\n    payload: favoriteOffers,\n  }),\n);\n\nexport const toggleIsFavorite = createAction(\n  ActionType.LoadFavoriteOffers,\n  (favoriteOffers: OfferType[]) => ({\n    payload: favoriteOffers,\n  }),\n);\n\nexport const updateOffer = createAction(\n  ActionType.UpdateOffer,\n  (updatedOffer: OfferType) => ({\n    payload: updatedOffer,\n  }),\n);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthStatus) => ({\n    payload: authStatus,\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\nexport const redirectToRoute = createAction(\n  ActionType.RedirectToRoute,\n  (url: AppRoute) => ({\n    payload: url,\n  }),\n);\n\nexport const receiveAuthData = createAction(\n  ActionType.ReceiveAuthData,\n  (authUserData: AuthUserData) => ({\n    payload: authUserData,\n  }),\n);\n","import { combineReducers } from 'redux';\nimport { userAuth } from './user-auth/user-auth';\nimport { offersData } from './offers-data/offers-data';\nimport { currentOfferData } from './current-offer-data/current-offer-data';\nimport { nearbyData } from './nearby-data/nearby-data';\nimport { favoritesData } from './favorites-data/favorites-data';\nimport { reviewsData } from './reviews-data/reviews-data';\nimport { appState } from './app-state/app-state';\n\nexport enum NameSpace {\n  auth = 'USER_AUTH',\n  offers = 'OFFERS_DATA',\n  currentOffer = 'CURRENT_OFFER_DATA',\n  nearbyOffers = 'NEARBY_DATA',\n  favoriteOffers = 'FAVORITES_DATA',\n  reviews = 'REVIEWS_DATA',\n  state = 'STATE',\n\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.auth]: userAuth,\n  [NameSpace.offers]: offersData,\n  [NameSpace.nearbyOffers]: nearbyData,\n  [NameSpace.favoriteOffers]: favoritesData,\n  [NameSpace.currentOffer]: currentOfferData,\n  [NameSpace.reviews]: reviewsData,\n  [NameSpace.state]: appState,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { AuthDataResponse, AuthUserData } from '../types/auth-data';\nimport { BackendOfferType, OfferType } from '../types/offer-type';\nimport { BackendReviewType, ReviewType } from '../types/review-type';\n\nexport const adaptSingleToClient = (offer: BackendOfferType): OfferType => (\n  {\n    bedrooms: offer.bedrooms,\n    city: offer.city,\n    description: offer.description,\n    goods: offer.goods,\n    host: {\n      avatarUrl: offer.host['avatar_url'],\n      id: offer.host.id,\n      isPro: offer.host['is_pro'],\n      name: offer.host.name,\n    },\n    id: offer.id,\n    images: offer.images,\n    isFavorite: offer['is_favorite'],\n    isPremium: offer['is_premium'],\n    location: offer.location,\n    maxAdults: offer['max_adults'],\n    previewImage: offer['preview_image'],\n    price: offer.price,\n    rating: offer.rating,\n    title: offer.title,\n    type: offer.type,\n  }\n);\n\nexport const adaptMultipleToClient = (data: BackendOfferType[]): OfferType[] =>\n  data.map((offer: BackendOfferType) => (\n    adaptSingleToClient(offer)\n  ));\n\nexport const adaptAuthDataToClient = (data: AuthDataResponse): AuthUserData => {\n  const {\n    'avatar_url': del1,\n    'is_pro': del2,\n    ...adaptedProps\n  } = {\n    ...data,\n    avatarUrl: data['avatar_url'],\n    isPro: data['is_pro'],\n  };\n  return adaptedProps;\n};\n\nexport const adaptReviewToClient = (data: BackendReviewType): ReviewType => ({\n  comment: data.comment,\n  date: data.date,\n  id: data.id,\n  rating: data.rating,\n  user: {\n    avatarUrl: data.user['avatar_url'],\n    id: data.user.id,\n    isPro: data.user['is_pro'],\n    name: data.user.name,\n  },\n});\n\nexport const adaptSomeReviewsToClient = (data: BackendReviewType[]): ReviewType[] =>\n  data.map((review: BackendReviewType) => (\n    adaptReviewToClient(review)\n  ));\n","export const AUTH_TOKEN_KEY_NAME = 'six-cities-auth-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import { toast } from 'react-toastify';\nimport { APIRoute, AppRoute, AuthStatus, LoadingStatus, Messages } from '../const';\nimport {\n  loadCurrentOffer,\n  loadFavoriteOffers,\n  loadNearbyOffers,\n  loadOfferReviews,\n  loadOffers,\n  receiveAuthData,\n  redirectToRoute,\n  requireAuthorization,\n  requireLogout,\n  setCurrentOfferLoadingStatus,\n  setFavoriteOffersLoadingStatus,\n  setNearbyOffersLoadingStatus,\n  setOfferReviewsLoadingStatus,\n  setOffersLoadingStatus,\n  setReviewLoadingStatus,\n  setToggleIsFavoriteLoadingStatus,\n  updateOffer\n} from '../store/action';\nimport { ThunkActionResult } from '../types/action';\nimport { AuthDataRequest, AuthDataResponse } from '../types/auth-data';\nimport { BackendOfferType } from '../types/offer-type';\nimport { BackendReviewType, PostReviewType } from '../types/review-type';\nimport { adaptSingleToClient, adaptMultipleToClient, adaptAuthDataToClient, adaptSomeReviewsToClient } from './adapter';\nimport { dropToken, saveToken } from './token';\n\n\nexport const fetchOffersAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<BackendOfferType[]>(APIRoute.Hotels);\n      dispatch(loadOffers(adaptMultipleToClient(data)));\n      dispatch(setOffersLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setOffersLoadingStatus(LoadingStatus.Failed));\n      toast.error(Messages.OFFER_LOADING_ERROR);\n    }\n  };\n\nexport const fetchCurrentOfferAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<BackendOfferType>(`${APIRoute.Hotels}/${id}`);\n      dispatch(loadCurrentOffer(adaptSingleToClient(data)));\n      dispatch(setCurrentOfferLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setCurrentOfferLoadingStatus(LoadingStatus.Failed));\n      toast.error(Messages.OFFER_LOADING_ERROR);\n    }\n  };\n\nexport const fetchFavoriteOffersAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<BackendOfferType[]>(APIRoute.Favorite);\n      dispatch(loadFavoriteOffers(adaptMultipleToClient(data)));\n      dispatch(setFavoriteOffersLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setFavoriteOffersLoadingStatus(LoadingStatus.Failed));\n    }\n  };\n\nexport const toggleIsFavoriteAction = (id: number, favoriteStatus: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.post<BackendOfferType>((`${APIRoute.Favorite}/${id}/${favoriteStatus}`));\n      dispatch(updateOffer(adaptSingleToClient(data)));\n      dispatch(setToggleIsFavoriteLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setToggleIsFavoriteLoadingStatus(LoadingStatus.Failed));\n      dispatch(redirectToRoute(AppRoute.SignIn));\n      toast.warning(Messages.FAVORITE_NO_AUTH);\n    }\n  };\n\n\nexport const fetchOfferReviewsAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<BackendReviewType[]>(`${APIRoute.Reviews}/${id}`);\n      dispatch(loadOfferReviews(adaptSomeReviewsToClient(data)));\n      dispatch(setOfferReviewsLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setOfferReviewsLoadingStatus(LoadingStatus.Failed));\n    }\n  };\n\nexport const postOfferReviewAction = (id: string, { comment, rating }: PostReviewType): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      dispatch(setReviewLoadingStatus(LoadingStatus.Loading));\n      const { data } =  await api.post((`${APIRoute.Reviews}/${id}`), { comment, rating });\n      dispatch(loadOfferReviews(adaptSomeReviewsToClient(data)));\n      dispatch(setReviewLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setReviewLoadingStatus(LoadingStatus.Failed));\n      toast.error(Messages.REVIEW_POST_ERROR);\n    }\n  };\n\nexport const fetchNearbyOffersAction = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<BackendOfferType[]>(`${APIRoute.Hotels}/${id}${APIRoute.Nearby}`);\n      dispatch(loadNearbyOffers(adaptMultipleToClient(data)));\n      dispatch(setNearbyOffersLoadingStatus(LoadingStatus.Succeeded));\n    } catch {\n      dispatch(setNearbyOffersLoadingStatus(LoadingStatus.Failed));\n      toast.error(Messages.OFFER_LOADING_ERROR);\n    }\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const {data} = await api.get<AuthDataResponse>(APIRoute.Login);\n      dispatch(requireAuthorization(AuthStatus.Auth));\n      dispatch(receiveAuthData(adaptAuthDataToClient(data)));\n    } catch {\n      dispatch(requireAuthorization(AuthStatus.NoAuth));\n      toast.info(Messages.AUTH_INFO);\n    }\n  };\n\nexport const loginAction = ({login: email, password}: AuthDataRequest): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const { data } = await api.post<AuthDataResponse>(APIRoute.Login, {email, password});\n      saveToken(data.token);\n      dispatch(requireAuthorization(AuthStatus.Auth));\n      dispatch(receiveAuthData(adaptAuthDataToClient(data)));\n      dispatch(redirectToRoute(AppRoute.Main));\n    } catch {\n      toast.error(Messages.AUTH_FAIL);\n    }\n  };\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(requireLogout());\n  };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { AuthStatus } from '../../../const';\nimport { UserAuth } from '../../../types/state';\nimport { receiveAuthData, requireAuthorization, requireLogout } from '../../action';\n\n\nconst initialState: UserAuth = {\n  authStatus: AuthStatus.Unknown,\n  authUserData: null,\n};\n\nconst userAuth = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authStatus = action.payload;\n    })\n    .addCase(receiveAuthData, (state, action) => {\n      state.authUserData = action.payload;\n    })\n    .addCase(requireLogout, (state, action) => {\n      state.authStatus = AuthStatus.NoAuth;\n      state.authUserData = null;\n    });\n});\n\nexport { userAuth };\n","import { MAX_RATING_VALUE, ReviewLength, SortingTypes } from '../const';\nimport { OfferType } from '../types/offer-type';\n\nexport const capitalizeWord = (word: string): string => word.charAt(0).toUpperCase() + word.slice(1);\n\nexport const getRatingWidth = (rating: number): number => (Math.round(rating) / 5) * 100;\n\nexport const ratingValues = new Array(MAX_RATING_VALUE).fill(null).map((_, index) => index + 1).sort((a, b) => b - a);\n\nexport const formatReviewDate = (reviewDate: string): string[] => {\n  const rawDate = new Date(reviewDate);\n  return [\n    rawDate.toLocaleString('en-CA').slice(0, 10),\n    rawDate.toLocaleString('en-US', { month: 'long', year: 'numeric' }),\n  ];\n};\n\nexport const getSelectedCityOffers = (offers: OfferType[], selectedCity: string): OfferType[]  => offers.filter((offer) => offer.city.name === selectedCity);\n\n\nexport const sortingOffers = (currentSortingType: string, offers: OfferType[]): OfferType[] => {\n  switch (currentSortingType) {\n    case SortingTypes.PRICE_UP:\n      return [...offers].sort((a, b) => a.price - b.price);\n    case SortingTypes.PRICE_DOWN:\n      return [...offers].sort((a, b) => b.price - a.price);\n    case SortingTypes.TOP_RATED:\n      return [...offers].sort((a, b) => b.rating - a.rating);\n    default:\n      return offers;\n  }\n};\n\nexport const getRandomItems = (items: string[], length: number): string[] => items.slice().sort(() => 0.5 - Math.random()).slice(0,length);\n\nexport const updateOffers = (offers: OfferType[], updateData: OfferType): OfferType[] => {\n  const updateDataIndex = offers.findIndex((offer) => offer.id === updateData.id);\n  if (updateDataIndex === -1) {\n    return offers;\n  }\n  return [\n    ...offers.slice(0, updateDataIndex),\n    updateData,\n    ...offers.slice(updateDataIndex + 1),\n  ];\n};\n\nexport const updateFavoritesList = (offers: OfferType[], updateData: OfferType): OfferType[] => {\n  const updateDataIndex = offers.findIndex((offer) => offer.id === updateData.id);\n  if (updateDataIndex === -1) {\n    return [\n      ...offers,\n      updateData,\n    ];\n  }\n  return [\n    ...offers.slice(0, updateDataIndex),\n    ...offers.slice(updateDataIndex + 1),\n  ];\n};\n\nexport const updateCurrentOffer = (offer: OfferType, updateData: OfferType): OfferType => {\n  if (offer.id !== updateData.id) {\n    return offer;\n  }\n  return updateData;\n};\n\nexport const validateLogin = (login: string): string => {\n  const loginReg = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n  if (loginReg.test(login)) {\n    return '';\n  }\n  return 'Login must contain a valid email address';\n};\n\nexport const validatePassword = (password: string): string => {\n  const passwordReg = /(?=.*\\d)(?=.*[a-zA-Z])./;\n  if (passwordReg.test(password)) {\n    return '';\n  }\n  return 'Password must contain at least 1 letter and 1 number.\\n No spaces allowed';\n};\n\nexport const checkIsValidUserReview = (rating: number, comment: string): boolean => !((rating > 0) && ((comment.length >= ReviewLength.Min) && (comment.length < ReviewLength.Max)));\n","import { OffersData } from '../../../types/state';\nimport { LoadingStatus } from '../../../const';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loadOffers, setOffersLoadingStatus, updateOffer } from '../../action';\nimport { updateOffers } from '../../../utils/utils';\n\n\nconst initialState: OffersData = {\n  offers: [],\n  offersLoadingStatus: LoadingStatus.Idle,\n};\n\nconst offersData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadOffers, (state, action) => {\n      state.offers = action.payload;\n    })\n    .addCase(setOffersLoadingStatus, (state, action) => {\n      state.offersLoadingStatus = action.payload;\n    })\n    .addCase(updateOffer, (state, action) => {\n      state.offers = updateOffers(state.offers, action.payload);\n    });\n});\n\nexport { offersData };\n","import { CurrentOfferData } from '../../../types/state';\nimport { LoadingStatus } from '../../../const';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loadCurrentOffer, setCurrentOfferLoadingStatus, updateOffer } from '../../action';\nimport { updateCurrentOffer } from '../../../utils/utils';\n\n\nconst initialState: CurrentOfferData = {\n  currentOffer: null,\n  currentOfferLoadingStatus: LoadingStatus.Idle,\n};\n\n\nconst currentOfferData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadCurrentOffer, (state, action) => {\n      state.currentOffer = action.payload;\n    })\n    .addCase(setCurrentOfferLoadingStatus, (state, action) => {\n      state.currentOfferLoadingStatus = action.payload;\n    })\n    .addCase(updateOffer, (state, action) => {\n      if (state.currentOffer !== null) {\n        state.currentOffer = updateCurrentOffer(state.currentOffer, action.payload);\n      }\n    });\n});\n\nexport { currentOfferData };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { LoadingStatus } from '../../../const';\nimport { NearbyData } from '../../../types/state';\nimport { updateOffers } from '../../../utils/utils';\nimport { loadNearbyOffers, setNearbyOffersLoadingStatus, updateOffer } from '../../action';\n\n\nconst initialState: NearbyData = {\n  nearbyOffers: [],\n  nearbyOffersLoadingStatus: LoadingStatus.Idle,\n};\n\nconst nearbyData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadNearbyOffers, (state, action) => {\n      state.nearbyOffers = action.payload;\n    })\n    .addCase(setNearbyOffersLoadingStatus, (state, action) => {\n      state.nearbyOffersLoadingStatus = action.payload;\n    })\n    .addCase(updateOffer, (state, action) => {\n      state.nearbyOffers = updateOffers(state.nearbyOffers, action.payload);\n    });\n});\n\nexport { nearbyData };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { LoadingStatus } from '../../../const';\nimport { FavoritesData } from '../../../types/state';\nimport { updateFavoritesList } from '../../../utils/utils';\nimport { loadFavoriteOffers, setFavoriteOffersLoadingStatus, setToggleIsFavoriteLoadingStatus, updateOffer } from '../../action';\n\n\nconst initialState: FavoritesData = {\n  favoriteOffers: [],\n  favoriteOffersLoadingStatus: LoadingStatus.Idle,\n  toggleIsFavoriteLoadingStatus: LoadingStatus.Idle,\n};\n\n\nconst favoritesData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadFavoriteOffers, (state, action) => {\n      state.favoriteOffers = action.payload;\n    })\n    .addCase(setFavoriteOffersLoadingStatus, (state, action) => {\n      state.favoriteOffersLoadingStatus = action.payload;\n    })\n    .addCase(updateOffer, (state, action) => {\n      state.favoriteOffers = updateFavoritesList(state.favoriteOffers, action.payload);\n    })\n    .addCase(setToggleIsFavoriteLoadingStatus, (state, action) => {\n      state.toggleIsFavoriteLoadingStatus = action.payload;\n    });\n});\n\nexport { favoritesData };\n","import { ReviewsData } from '../../../types/state';\nimport { LoadingStatus } from '../../../const';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loadOfferReviews, setOfferReviewsLoadingStatus, setReviewLoadingStatus } from '../../action';\n\n\nconst initialState: ReviewsData = {\n  offerReviews: [],\n  offerReviewsLoadingStatus: LoadingStatus.Idle,\n  reviewLoadingStatus: LoadingStatus.Idle,\n};\n\nconst reviewsData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadOfferReviews, (state, action) => {\n      state.offerReviews = action.payload;\n    })\n    .addCase(setOfferReviewsLoadingStatus, (state, action) => {\n      state.offerReviewsLoadingStatus = action.payload;\n    })\n    .addCase(setReviewLoadingStatus, (state, action) => {\n      state.reviewLoadingStatus = action.payload;\n    });\n});\n\nexport { reviewsData };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { DEFAULT_CITY, SortingTypes } from '../../../const';\nimport { AppState } from '../../../types/state';\nimport { selectCity, selectSorting } from '../../action';\n\n\nconst initialState: AppState = {\n  selectedCity: DEFAULT_CITY,\n  currentSortingType: SortingTypes.DEFAULT,\n};\n\nconst appState = createReducer(initialState, (builder) => {\n  builder\n    .addCase(selectCity, (state, action) => {\n      state.selectedCity = action.payload;\n    })\n    .addCase(selectSorting, (state, action) => {\n      state.currentSortingType = action.payload;\n    });\n});\n\n\nexport { appState };\n","import { State } from '../../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nexport const getSelectedCity = (state: State): string => state[NameSpace.state].selectedCity;\nexport const getCurrentSortingType = (state: State): string => state[NameSpace.state].currentSortingType;\n","import { createSelector } from 'reselect';\nimport { LoadingStatus } from '../../../const';\nimport { OfferType } from '../../../types/offer-type';\nimport { State } from '../../../types/state';\nimport { getSelectedCityOffers, sortingOffers } from '../../../utils/utils';\nimport { getCurrentSortingType, getSelectedCity } from '../app-state/selectors';\nimport { NameSpace } from '../root-reducer';\n\n\nexport const getOffers = (state: State): OfferType[] => state[NameSpace.offers].offers;\nexport const getOffersLoadingStatus = (state: State): LoadingStatus => state[NameSpace.offers].offersLoadingStatus;\n\nexport const getFilteredOffers = createSelector(\n  getOffers,\n  getSelectedCity,\n  (offers, selectedCity) => getSelectedCityOffers(offers, selectedCity),\n);\n\nexport const getSortedOffers = createSelector(\n  getCurrentSortingType,\n  getFilteredOffers,\n  (currentSortingType, offers) => sortingOffers(currentSortingType, offers),\n);\n","import { AuthStatus } from '../../../const';\nimport { AuthUserData } from '../../../types/auth-data';\nimport { State } from '../../../types/state';\nimport { NameSpace } from '../root-reducer';\n\n\nexport const getAuthStatus = (state: State): AuthStatus => state[NameSpace.auth].authStatus;\nexport const getAuthUserData = (state: State): AuthUserData | null => state[NameSpace.auth].authUserData;\n","import { MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../../const';\n\ntype SignOutBlockProps = {\n  onSignOut: (e: MouseEvent<HTMLAnchorElement>) => void,\n}\n\nfunction SignOutBlock({onSignOut}: SignOutBlockProps): JSX.Element {\n  return (\n    <li className=\"header__nav-item\">\n      <Link className=\"header__nav-link\" to={AppRoute.SignOut} onClick={onSignOut}>\n        <span className=\"header__signout\">Sign out</span>\n      </Link>\n    </li>\n  );\n}\n\nexport default SignOutBlock;\n","import { MouseEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute, AuthStatus, CustomClasses } from '../../../const';\nimport { logoutAction } from '../../../services/api-actions';\nimport { getAuthStatus, getAuthUserData } from '../../../store/reducers/user-auth/selectors';\nimport SignOutBlock from './signout-block';\n\n\nfunction Auth(): JSX.Element {\n\n  const authStatus = useSelector(getAuthStatus);\n  const authUserData = useSelector(getAuthUserData);\n\n  const dispatch = useDispatch();\n\n  const isAuth = authStatus === AuthStatus.Auth;\n\n  const handleSignOut = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    dispatch(logoutAction());\n  };\n\n  return (\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item user\">\n          <Link className=\"header__nav-link header__nav-link--profile\" to={isAuth ? AppRoute.Favorites : AppRoute.SignIn}>\n            <div className=\"header__avatar-wrapper user__avatar-wrapper\" style={isAuth ? {backgroundImage: `url(${authUserData?.avatarUrl})`, borderRadius: '50%'} : {}}>\n            </div>\n            <span className={isAuth ? CustomClasses.HeaderAuth.spanAuthClassName : CustomClasses.HeaderAuth.spanNoAuthClassName}>{isAuth ? authUserData?.email : 'Sign in'}</span>\n          </Link>\n        </li>\n        {\n          isAuth && <SignOutBlock onSignOut={handleSignOut} />\n        }\n      </ul>\n    </nav>\n  );\n}\n\nexport default Auth;\n","import { Link } from 'react-router-dom';\n\nfunction Logo(): JSX.Element {\n  return (\n    <div className=\"header__left\">\n      <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n        <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n      </Link>\n    </div>\n  );\n}\n\nexport default Logo;\n","import { memo } from 'react';\nimport Auth from '../auth/auth';\nimport Logo from '../logo/logo';\n\ntype HeaderPropsType = {\n  renderAuth: boolean,\n}\n\nfunction Header({renderAuth}: HeaderPropsType): JSX.Element {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <Logo />\n          {renderAuth && <Auth />}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport { Header };\nexport default memo(Header);\n","import './loader.css';\n\nfunction Loader(): JSX.Element {\n  return (\n    <div className=\"loader\" data-testid=\"loader\"><div className=\"lds-dual-ring\" /></div>\n  );\n}\n\nexport default Loader;\n","import Loader from '../../screens/loader/loader';\n\ntype LoaderWrapperProps = {\n  isLoad: boolean,\n  children: JSX.Element,\n}\n\nfunction LoaderWrapper({ isLoad, children }: LoaderWrapperProps): JSX.Element {\n  return (isLoad && children) || <Loader />;\n}\n\nexport default LoaderWrapper;\n","import { MouseEvent } from 'react';\nimport { CustomClasses } from '../../../const';\n\ntype LocItemPropsType = {\n  cityName: string;\n  selectedCity: string,\n  onLocationClick: (e:  MouseEvent<HTMLAnchorElement>) => void,\n}\n\nfunction LocationsItem({cityName, selectedCity, onLocationClick}: LocItemPropsType): JSX.Element {\n  return (\n    <li className=\"locations__item\">\n      <a className={`locations__item-link tabs__item ${selectedCity === cityName ? CustomClasses.LocationsTab.itemClassName : ''}`} href=\"/\" onClick={onLocationClick}>\n        <span>{cityName}</span>\n      </a>\n    </li>\n  );\n}\n\nexport default LocationsItem;\n","import { memo, MouseEvent } from 'react';\nimport { CITIES } from '../../../const';\nimport LocationsItem from './locations-item';\n\ntype LocationsProps = {\n  onMenuItemClick: (selectedCity: string) => void,\n  selectedCity: string,\n}\n\nfunction Locations({onMenuItemClick, selectedCity}: LocationsProps): JSX.Element {\n\n  const handleMouseClick = (e: MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    onMenuItemClick(e.currentTarget.innerText);\n  };\n\n  return (\n    <section className=\"locations container\">\n      <ul className=\"locations__list tabs__list\">\n        {\n          CITIES.map((city) => <LocationsItem key={city} cityName={city} selectedCity={selectedCity} onLocationClick={handleMouseClick}/>)\n        }\n      </ul>\n    </section>\n  );\n}\n\nexport { Locations };\nexport default memo(Locations);\n","import { useState, useEffect, MutableRefObject } from 'react';\nimport { Map, TileLayer } from 'leaflet';\nimport { CityType } from '../types/offer-type';\n\nconst TILE_LAYER_URL = 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png';\nconst TILE_LAYER_ATTRIBUTION = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>';\n\nfunction useMap(mapRef: MutableRefObject<HTMLElement | null>, city: CityType): Map | null {\n  const {location} = city;\n  const [map, setMap] = useState<Map | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = new Map(mapRef.current, {\n        center: {\n          lat: location.latitude,\n          lng: location.longitude,\n        },\n        zoom: location.zoom,\n      });\n\n      const layer = new TileLayer (\n        TILE_LAYER_URL,\n        {\n          attribution: TILE_LAYER_ATTRIBUTION,\n        },\n      );\n\n      instance.addLayer(layer);\n\n      setMap(instance);\n    } else {\n      map?.setView({\n        lat: location.latitude,\n        lng: location.longitude,\n      }, location.zoom);\n    }\n\n  }, [mapRef, map, city, location]);\n\n  return map;\n}\n\nexport default useMap;\n","import 'leaflet/dist/leaflet.css';\nimport { Icon, Marker } from 'leaflet';\nimport { useEffect, useRef } from 'react';\nimport { PinIconUrl } from '../../../const';\nimport useMap from '../../../hooks/use-map';\nimport { OfferType } from '../../../types/offer-type';\n\ntype MapPropsType = {\n  offers: OfferType[],\n  selectedOfferId: number | null,\n  currentOffer?: OfferType,\n}\n\nconst defaultPinIcon = new Icon({\n  iconUrl: PinIconUrl.Default,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n});\n\nconst activePinIcon = new Icon({\n  iconUrl: PinIconUrl.Active,\n  iconSize: [30, 40],\n  iconAnchor: [15, 40],\n});\n\nfunction Map({offers, selectedOfferId, currentOffer}: MapPropsType): JSX.Element {\n\n  const city = currentOffer ? currentOffer.city: offers[0].city;\n\n  const mapRef = useRef(null);\n\n  const map = useMap(mapRef, city);\n\n  useEffect(() => {\n    if(map) {\n\n      if (currentOffer) {\n        const currentMarker = new Marker({\n          lat: currentOffer.location.latitude,\n          lng: currentOffer.location.longitude,\n        });\n        currentMarker.setIcon(activePinIcon)\n          .addTo(map);\n      }\n\n      offers.forEach((offer) => {\n        const offerMarker = new Marker({\n          lat: offer.location.latitude,\n          lng: offer.location.longitude,\n        });\n\n        offerMarker\n          .setIcon(\n            selectedOfferId !== null && offer.id === selectedOfferId ? activePinIcon : defaultPinIcon,\n          )\n          .addTo(map);\n      });\n    }\n  }, [map, offers, city, selectedOfferId, currentOffer]);\n\n  return (\n    <div style={{height: '100%'}} ref={mapRef}>\n    </div>\n  );\n}\n\nexport default Map;\n","import { MouseEvent } from 'react';\nimport { CustomClasses } from '../../../const';\n\ntype ButtonPropsType = {\n  isFavorite: boolean,\n  onFavoriteButtonClick: (e: MouseEvent<HTMLButtonElement>)  => void,\n}\n\nfunction FavoriteButton({onFavoriteButtonClick, isFavorite}: ButtonPropsType): JSX.Element {\n\n  return (\n    <button className={`place-card__bookmark-button ${isFavorite ? CustomClasses.CitiesPlaces.buttonClassName : ''} button`} type=\"button\" onClick={onFavoriteButtonClick}>\n      <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n        <use xlinkHref=\"#icon-bookmark\"></use>\n      </svg>\n      <span className=\"visually-hidden\">{isFavorite ? 'In bookmarks' : 'To bookmarks'}</span>\n    </button>\n  );\n}\n\nexport default FavoriteButton;\n","function PlaceCardMark(): JSX.Element {\n  return (\n    <div className=\"place-card__mark\">\n      <span>Premium</span>\n    </div>\n  );\n}\n\nexport default PlaceCardMark;\n","import { MouseEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../../const';\nimport { toggleIsFavoriteAction } from '../../../services/api-actions';\nimport { PlacesClassType } from '../../../types/classes-type';\nimport { OfferType } from '../../../types/offer-type';\nimport { capitalizeWord, getRatingWidth } from '../../../utils/utils';\nimport FavoriteButton from '../favorite-button/favorite-button';\nimport PlaceCardMark from './place-card-mark';\n\ntype CardPropsType = {\n  offer: OfferType,\n  onCardOver: (id: number) => void,\n  onCardOut: () => void,\n  customClasses: PlacesClassType,\n}\n\nfunction PlaceCard({offer, onCardOver, onCardOut, customClasses}: CardPropsType): JSX.Element {\n  const { isPremium, isFavorite, price, type, title, rating, previewImage, id } = offer;\n  const {cardClassName, wrapperClassName} = customClasses;\n\n  const dispatch = useDispatch();\n\n  const handleFavoriteButtonClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    evt.preventDefault();\n    const favoriteStatus = +(!isFavorite);\n    dispatch(toggleIsFavoriteAction(id, favoriteStatus));\n  };\n\n  return (\n    <article className={`${cardClassName} place-card`} onMouseEnter={() => onCardOver(id)} onMouseLeave={() => onCardOut()} data-testid=\"place-card\">\n      {isPremium && <PlaceCardMark />}\n      <div className={`${wrapperClassName} place-card__image-wrapper`}>\n        <Link to={`${AppRoute.Offer}${id}`}>\n          <img className=\"place-card__image\" src={previewImage} width=\"260\" height=\"200\" alt=\"Great Housing!\" data-testid=\"path-to-offer\"/>\n        </Link>\n      </div>\n      <div className=\"place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <FavoriteButton isFavorite={isFavorite} onFavoriteButtonClick={handleFavoriteButtonClick} />\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: `${getRatingWidth(rating)}%`}}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.Offer}${id}`} data-testid=\"path-to-offer\">\n            {title}\n          </Link>\n        </h2>\n        <p className=\"place-card__type\">{capitalizeWord(type)}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default PlaceCard;\n","import { useCallback } from 'react';\nimport { PlacesClassType } from '../../../types/classes-type';\nimport { OfferType } from '../../../types/offer-type';\nimport PlaceCard from '../place-card/place-card';\n\nexport type OffersListPropsType = {\n  offers: OfferType[],\n  transferActiveOfferId?: (id: number | null) => void,\n  customClasses: PlacesClassType,\n}\n\nfunction OffersList({offers, transferActiveOfferId, customClasses}: OffersListPropsType): JSX.Element {\n  const {listClassName, tabsClassName} = customClasses;\n\n  const handleMouseEnter = useCallback((id: number) => {\n    if(transferActiveOfferId) {\n      transferActiveOfferId(id);\n    }\n  },[transferActiveOfferId]);\n\n  const handleMouseLeave = useCallback((): void => {\n    if(transferActiveOfferId) {\n      transferActiveOfferId(null);\n    }\n  },[transferActiveOfferId]);\n\n  return (\n    <div className={`${listClassName} places__list ${tabsClassName}`}>\n      {\n        offers.map((offer: OfferType) => {\n          const keyValue = `${offer.city.name}-${offer.id}`;\n          return <PlaceCard key={keyValue} offer={offer} onCardOver={handleMouseEnter} onCardOut={handleMouseLeave} customClasses={customClasses}/>;\n        },\n        )\n      }\n    </div>\n  );\n}\n\nexport default OffersList;\n","import { memo, MouseEvent, useState } from 'react';\nimport { CustomClasses, SortingTypes } from '../../../const';\n\ntype SortProps = {\n  currentSortingType: string,\n  onSelectSorting: (sortingType: string) => void,\n}\n\nfunction PlacesSort({currentSortingType, onSelectSorting}: SortProps): JSX.Element {\n\n  const [isOpened, setIsOpened] = useState(false);\n\n  const handleSortFormClick = (): void => {\n    setIsOpened((prevState) => !prevState);\n  };\n\n  const handleSortItemClick = (e: MouseEvent<HTMLElement>): void => {\n    e.stopPropagation();\n    onSelectSorting(e.currentTarget.innerText);\n    setIsOpened((prevState) => !prevState);\n  };\n\n  return (\n    <form className=\"places__sorting\" action=\"#\" method=\"get\"  onClick={() => handleSortFormClick()}>\n      <span className=\"places__sorting-caption\">Sort by </span>\n      <span className=\"places__sorting-type\" tabIndex={0}>\n        {currentSortingType}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul className={`places__options places__options--custom ${isOpened ? CustomClasses.PlacesSort.listClassName : ''}`}>\n        {\n          Object.values(SortingTypes)\n            .map((type) => (\n              <li key={type} className={`places__option ${currentSortingType === type ? CustomClasses.PlacesSort.itemClassName : ''}`} tabIndex={0} onClick={(e) => handleSortItemClick(e)}>\n                {type}\n              </li>),\n            )\n        }\n      </ul>\n    </form>\n  );\n}\n\nexport { PlacesSort };\nexport default memo(PlacesSort);\n","type NoPlacesProps = {\n  selectedCity: string,\n}\n\nfunction NoPlaces({selectedCity}: NoPlacesProps): JSX.Element {\n  return (\n    <section className=\"cities__no-places\">\n      <div className=\"cities__status-wrapper tabs__content\">\n        <b className=\"cities__status\">No places to stay available</b>\n        <p className=\"cities__status-description\">We could not find any property available at the moment in {selectedCity}</p>\n      </div>\n    </section>\n  );\n}\n\nexport default NoPlaces;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CustomClasses, LoadingStatus } from '../../../const';\nimport { fetchOffersAction } from '../../../services/api-actions';\nimport { selectCity, selectSorting } from '../../../store/action';\nimport { getSelectedCity, getCurrentSortingType } from '../../../store/reducers/app-state/selectors';\nimport { getOffersLoadingStatus, getSortedOffers } from '../../../store/reducers/offers-data/selectors';\nimport Header from '../../layout/header/header';\nimport LoaderWrapper from '../../layout/loader-wrapper/loader-wrapper';\nimport Locations from '../../layout/locations/locations';\nimport Map from '../../layout/map/map';\nimport OffersList from '../../layout/offers-list/offers-list';\nimport PlacesSort from '../../layout/places-sort/places-sort';\nimport NoPlaces from './no-places';\n\n\nfunction MainScreen(): JSX.Element {\n\n  const offers = useSelector(getSortedOffers);\n  const selectedCity = useSelector(getSelectedCity);\n  const currentSortingType = useSelector(getCurrentSortingType);\n  const offersLoadingStatus = useSelector(getOffersLoadingStatus);\n\n  const dispatch = useDispatch();\n\n  const onMenuItemClick = (city: string) => {\n    dispatch(selectCity(city));\n  };\n  const onSelectSorting = (currentSorting: string) => {\n    dispatch(selectSorting(currentSorting));\n  };\n  const fetchOffers = useCallback(() => {\n    dispatch(fetchOffersAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchOffers();\n  }, [fetchOffers]);\n\n  const [selectedOfferId, setSelectedOfferId] = useState<number | null>(null);\n\n  const getActiveOfferId = (id: number | null) => {\n    setSelectedOfferId(id);\n  };\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header renderAuth />\n\n      <LoaderWrapper isLoad={offersLoadingStatus === LoadingStatus.Succeeded}>\n        <main className={`page__main page__main--index ${!(offersLoadingStatus === LoadingStatus.Succeeded) ? CustomClasses.MainScreen.mainClassName : ''}`}>\n          <h1 className=\"visually-hidden\">Cities</h1>\n          <div className=\"tabs\">\n            <Locations onMenuItemClick={onMenuItemClick} selectedCity={selectedCity} />\n          </div>\n          <div className=\"cities\">\n            <div className={`cities__places-container ${!(offersLoadingStatus === LoadingStatus.Succeeded) ? CustomClasses.MainScreen.divCitiesClassName : ''} container`}>\n              {offers.length ?\n                <section className=\"cities__places places\">\n                  <h2 className=\"visually-hidden\">Places</h2>\n                  <b className=\"places__found\">{offers.length} place{offers.length > 1 ? 's' : ''} to stay in {selectedCity}</b>\n                  <PlacesSort onSelectSorting={onSelectSorting} currentSortingType={currentSortingType}/>\n                  <LoaderWrapper isLoad={offersLoadingStatus === LoadingStatus.Succeeded}>\n                    <OffersList offers={offers} transferActiveOfferId={getActiveOfferId} customClasses={CustomClasses.CitiesPlaces} />\n                  </LoaderWrapper>\n                </section> :  <NoPlaces selectedCity={selectedCity} />}\n              <div className=\"cities__right-section\">\n                {(offersLoadingStatus === LoadingStatus.Succeeded) &&\n              <section className=\"cities__map map\">\n                <Map offers={offers} selectedOfferId={selectedOfferId} />\n              </section>}\n              </div>\n            </div>\n          </div>\n        </main>\n      </LoaderWrapper>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","import Header from '../../layout/header/header';\nimport { AuthDataRequest } from '../../../types/auth-data';\nimport { loginAction } from '../../../services/api-actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRef, FormEvent, MouseEvent } from 'react';\nimport { AppRoute, AuthStatus, CITIES } from '../../../const';\nimport { getRandomItems, validateLogin, validatePassword } from '../../../utils/utils';\nimport { selectCity } from '../../../store/action';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getAuthStatus } from '../../../store/reducers/user-auth/selectors';\n\nconst CITIES_COUNT = 1;\n\nfunction SignInScreen(): JSX.Element {\n\n  const authStatus = useSelector(getAuthStatus);\n  const isAuth = authStatus === AuthStatus.Auth;\n\n  const dispatch = useDispatch();\n\n  const onLoginFormSubmit = (authData: AuthDataRequest) => {\n    dispatch(loginAction(authData));\n  };\n  const onCityClick = (cityName: string) => {\n    dispatch(selectCity(cityName));\n  };\n\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleLoginChange = (evt: FormEvent<HTMLInputElement>) => {\n    if (loginRef.current) {\n      loginRef.current.setCustomValidity(\n        validateLogin(loginRef.current.value),\n      );\n      loginRef.current.reportValidity();\n    }\n  };\n\n  const handlePasswordChange = (evt: FormEvent<HTMLInputElement>) => {\n    if (passwordRef.current) {\n      passwordRef.current.setCustomValidity(\n        validatePassword(passwordRef.current.value),\n      );\n      passwordRef.current.reportValidity();\n    }\n  };\n\n  const handleFormSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      onLoginFormSubmit({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      });\n    }\n  };\n\n  const handleCityClick = (e: MouseEvent<HTMLAnchorElement>): void => {\n    onCityClick(e.currentTarget.innerText);\n  };\n\n  if (isAuth) {\n    return <Redirect to={AppRoute.Main} />;\n  }\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <Header renderAuth={false} />\n\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form className=\"login__form form\" action=\"#\" method=\"post\" onSubmit={handleFormSubmit}>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input className=\"login__input form__input\" ref={loginRef} type=\"email\" name=\"email\" placeholder=\"Email\" required onChange={handleLoginChange} data-testid=\"login\"/>\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input className=\"login__input form__input\" ref={passwordRef} type=\"password\" name=\"password\" placeholder=\"Password\" required onChange={handlePasswordChange} data-testid=\"password\"/>\n              </div>\n              <button className=\"login__submit form__submit button\" type=\"submit\">Sign in</button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link to={AppRoute.Main} className=\"locations__item-link\" onClick={handleCityClick}>\n                <span>{getRandomItems(CITIES, CITIES_COUNT)}</span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default SignInScreen;\n","import { createSelector } from 'reselect';\nimport { LoadingStatus } from '../../../const';\nimport { OfferType } from '../../../types/offer-type';\nimport { State } from '../../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nexport const getFavoriteOffers = (state: State): OfferType[] => state[NameSpace.favoriteOffers].favoriteOffers;\nexport const getFavoriteOffersLoadingStatus = (state: State): LoadingStatus => state[NameSpace.favoriteOffers].favoriteOffersLoadingStatus;\n\nexport const getFavoriteCities = createSelector(\n  getFavoriteOffers,\n  (favoriteOffers) => [...new Set(\n    favoriteOffers\n      .map(\n        (favorite) => favorite.city.name),\n  )]\n    .sort(),\n);\n","function FavoritesEmpty(): JSX.Element {\n  return (\n    <section className=\"favorites favorites--empty\">\n      <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n      <div className=\"favorites__status-wrapper\">\n        <b className=\"favorites__status\">Nothing yet saved.</b>\n        <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n      </div>\n    </section>\n  );\n}\n\nexport default FavoritesEmpty;\n","import { MouseEvent, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../../const';\nimport { toggleIsFavoriteAction } from '../../../services/api-actions';\nimport { OfferType } from '../../../types/offer-type';\nimport { capitalizeWord, getRatingWidth } from '../../../utils/utils';\nimport FavoriteButton from '../favorite-button/favorite-button';\n\ntype FavoriteCardPropsType = {\n  favoriteOffer: OfferType,\n}\n\nfunction FavoriteCard({favoriteOffer}: FavoriteCardPropsType): JSX.Element {\n  const { price, type, title, rating, previewImage, id, isFavorite } = favoriteOffer;\n\n  const dispatch = useDispatch();\n\n  const handleFavoriteButtonClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    evt.preventDefault();\n    const favoriteStatus = +(!isFavorite);\n    dispatch(toggleIsFavoriteAction(id, favoriteStatus));\n  };\n\n  useEffect(() => {\n    toggleIsFavoriteAction(id, +(!isFavorite));\n  }, [id, isFavorite]);\n\n  return (\n    <article className=\"favorites__card place-card\">\n      <div className=\"favorites__image-wrapper place-card__image-wrapper\">\n        <a href=\"/\">\n          <img className=\"place-card__image\" src={previewImage} width=\"150\" height=\"110\" alt=\"Great Housing!\" />\n        </a>\n      </div>\n      <div className=\"favorites__card-info place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <FavoriteButton isFavorite={isFavorite} onFavoriteButtonClick={handleFavoriteButtonClick} />\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: `${getRatingWidth(rating)}%`}}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.Offer}${id}`}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"place-card__type\">{capitalizeWord(type)}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default FavoriteCard;\n","import { MouseEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../../const';\nimport { selectCity } from '../../../store/action';\nimport { OfferType } from '../../../types/offer-type';\nimport FavoriteCard from '../favorite-card/favorite-card';\n\ntype FavoritePropsType = {\n  locationOffers: OfferType[],\n}\n\nfunction FavoritesLocations({locationOffers}: FavoritePropsType): JSX.Element {\n\n  const dispatch = useDispatch();\n\n  const selectCityItem = (cityName: string) => {\n    dispatch(selectCity(cityName));\n  };\n\n  const handleCityClick = (e: MouseEvent<HTMLAnchorElement>): void => {\n    selectCityItem(e.currentTarget.innerText);\n  };\n\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <Link className=\"locations__item-link\" to={AppRoute.Main} onClick={handleCityClick}>\n            <span>{locationOffers[0].city.name}</span>\n          </Link>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        {\n          locationOffers.map((offer) => {\n            const keyValue = `${offer.id}-${offer.city.name}`;\n            return <FavoriteCard key={keyValue} favoriteOffer={offer} />;\n          },\n          )\n        }\n      </div>\n    </li>\n  );\n}\n\nexport default FavoritesLocations;\n","import { useSelector } from 'react-redux';\nimport { getFavoriteCities } from '../../../store/reducers/favorites-data/selectors';\nimport { OfferType } from '../../../types/offer-type';\nimport { getSelectedCityOffers } from '../../../utils/utils';\nimport FavoritesLocations from '../favorites-locations/favorites-locations';\n\ntype FavoriteListPropsType = {\n  favoriteOffers: OfferType[]\n}\n\nfunction FavoritesList({favoriteOffers}: FavoriteListPropsType): JSX.Element {\n  const favoriteCities = useSelector(getFavoriteCities);\n\n  return (\n    <section className=\"favorites\">\n      <h1 className=\"favorites__title\">Saved listing</h1>\n      <ul className=\"favorites__list\">\n        {\n          favoriteCities\n            .map((city) => <FavoritesLocations key={city} locationOffers={getSelectedCityOffers(favoriteOffers, city)} />,\n            )\n        }\n      </ul>\n    </section>\n  );\n}\n\nexport default FavoritesList;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(): JSX.Element {\n  return (\n    <footer className=\"footer container\">\n      <Link className=\"footer__logo-link\" to=\"/\">\n        <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n      </Link>\n    </footer>\n  );\n}\n\nexport { Footer };\nexport default memo(Footer);\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CustomClasses, LoadingStatus } from '../../../const';\nimport { fetchFavoriteOffersAction } from '../../../services/api-actions';\nimport { getFavoriteOffers, getFavoriteOffersLoadingStatus } from '../../../store/reducers/favorites-data/selectors';\nimport FavoritesEmpty from '../../layout/favorites-empty/favorites-empty';\nimport FavoritesList from '../../layout/favorites-list/favorites-list';\nimport Footer from '../../layout/footer/footer';\nimport Header from '../../layout/header/header';\nimport LoaderWrapper from '../../layout/loader-wrapper/loader-wrapper';\n\n\nfunction FavoritesScreen(): JSX.Element {\n\n  const favoriteOffers = useSelector(getFavoriteOffers);\n  const favoriteOffersLoadingStatus = useSelector(getFavoriteOffersLoadingStatus);\n\n  const dispatch = useDispatch();\n\n  const fetchFavoriteOffers = useCallback(() => {\n    dispatch(fetchFavoriteOffersAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchFavoriteOffers();\n  }, [fetchFavoriteOffers]);\n\n  return (\n    <div className=\"page\">\n      <Header renderAuth />\n\n      <LoaderWrapper isLoad={favoriteOffersLoadingStatus === LoadingStatus.Succeeded} >\n        <main className={`page__main page__main--favorites ${favoriteOffers.length === 0 ? CustomClasses.FavoritesScreen.mainClassName : ''}`} data-testid=\"favorites-screen\">\n          <div className=\"page__favorites-container container\">\n            {\n              favoriteOffers.length === 0 ? <FavoritesEmpty /> : <FavoritesList favoriteOffers={favoriteOffers} />\n            }\n          </div>\n        </main>\n      </LoaderWrapper>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FavoritesScreen;\n","import { createSelector } from 'reselect';\nimport { LoadingStatus } from '../../../const';\nimport { ReviewType } from '../../../types/review-type';\nimport { State } from '../../../types/state';\nimport { NameSpace } from '../root-reducer';\n\n\nexport const getOfferReviews = (state: State): ReviewType[] => state[NameSpace.reviews].offerReviews;\n\nexport const getOfferReviewsLoadingStatus = (state: State): LoadingStatus => state[NameSpace.reviews].offerReviewsLoadingStatus;\n\nexport const getReviewLoadingStatus = (state: State): LoadingStatus => state[NameSpace.reviews].reviewLoadingStatus;\n\nexport const getSortedOfferReviews = createSelector(\n  getOfferReviews,\n  (reviews) =>  [...reviews].sort((a, b) => (new Date(b.date).getTime() - new Date(a.date).getTime())).slice(0, 10),\n);\n","import { ChangeEvent, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { LoadingStatus, RatingName } from '../../../const';\nimport { getReviewLoadingStatus } from '../../../store/reducers/reviews-data/selectors';\nimport { ratingValues } from '../../../utils/utils';\n\ntype RatingPropsType = {\n  onRatingChange: (e: ChangeEvent<HTMLInputElement>) => void,\n  rating: number,\n}\n\n\nfunction RatingStars({onRatingChange, rating}: RatingPropsType): JSX.Element {\n\n  const reviewLoadingStatus = useSelector(getReviewLoadingStatus);\n\n  return (\n    <>\n      {ratingValues.map((rank) => (\n        <Fragment key={rank}>\n          <input className=\"form__rating-input visually-hidden\" name=\"rating\" value={rank} id={`rating-${rank}-star`} type=\"radio\" checked={rank === rating} onChange={onRatingChange} disabled={reviewLoadingStatus === LoadingStatus.Loading}/>\n          <label htmlFor={`rating-${rank}-star`} className=\"reviews__rating-label form__rating-label\" title={RatingName[rank-1].toLowerCase()}>\n            <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n              <use xlinkHref=\"#icon-star\"></use>\n            </svg>\n          </label>\n        </Fragment>\n      ))}\n    </>\n  );\n}\n\nexport default RatingStars;\n","import { useParams } from 'react-router-dom';\nimport { useEffect} from 'react';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOfferReviewsAction, postOfferReviewAction } from '../../../services/api-actions';\nimport RatingStars from '../rating-stars/rating-stars';\nimport { LoadingStatus, ReviewLength } from '../../../const';\nimport { getReviewLoadingStatus } from '../../../store/reducers/reviews-data/selectors';\nimport { checkIsValidUserReview } from '../../../utils/utils';\n\ntype ReviewElementsType = {\n  comment: string,\n  rating: number,\n}\n\nconst initReviewState = {\n  comment: '',\n  rating: 0,\n};\n\nfunction ReviewsForm(): JSX.Element {\n\n  const reviewLoadingStatus = useSelector(getReviewLoadingStatus);\n  const isReviewLoading = reviewLoadingStatus === LoadingStatus.Loading;\n\n  const dispatch = useDispatch();\n\n  const postOfferReview = (id: string, userReview: ReviewElementsType): void => {\n    dispatch(postOfferReviewAction(id, userReview));\n    dispatch(fetchOfferReviewsAction(id));\n  };\n\n  const [userReview, setUserReview] = useState<ReviewElementsType>(initReviewState);\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (reviewLoadingStatus === LoadingStatus.Succeeded) {\n      setUserReview(initReviewState);\n    }\n  }, [reviewLoadingStatus]);\n\n\n  const {comment, rating} = userReview;\n\n  const handleRatingChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setUserReview((state) => ({\n      ...state,\n      rating: +(e.target.value),\n    }));\n  };\n\n  const handleReviewChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    setUserReview((state) => ({\n      ...state,\n      comment: e.target.value,\n    }));\n  };\n\n  const handleFormSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    postOfferReview(id, userReview);\n  };\n\n  return (\n    <form className=\"reviews__form form\" action=\"#\" method=\"post\" onSubmit={handleFormSubmit}>\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <div className=\"reviews__rating-form form__rating\">\n        <RatingStars onRatingChange={handleRatingChange} rating={rating} />\n      </div>\n      <textarea className=\"reviews__textarea form__textarea\" id=\"review\" name=\"review\" placeholder=\"Tell how was your stay, what you like and what can be improved\" value={comment} onChange={handleReviewChange} disabled={isReviewLoading}></textarea>\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n        To submit review please make sure to set <span className=\"reviews__star\">rating</span> and describe your stay with\n          {\n            comment.length < ReviewLength.Min ? ' at least ': ' up to '\n          }\n          <b className=\"reviews__text-amount\">\n            {\n              comment.length < ReviewLength.Min ? ' 50 ' : ' 300 '\n            } characters\n          </b>.\n          {\n            ((comment.length < ReviewLength.Min ) && (comment.length > (ReviewLength.Min - 10))) && `${ReviewLength.Min - comment.length} characters are missing.`\n          }\n          { (comment.length >= ReviewLength.Max ) && `${comment.length - (ReviewLength.Max - 1) } characters are redundant.`}\n        </p>\n        <button className=\"reviews__submit form__submit button\" type=\"submit\" disabled={checkIsValidUserReview(rating, comment) || isReviewLoading}>Submit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ReviewsForm;\n","import { ReviewType } from '../../../types/review-type';\nimport { getRatingWidth, formatReviewDate } from '../../../utils/utils';\n\ntype ReviewsItemPropsType = {\n  review: ReviewType,\n}\n\nfunction ReviewsItem({review}: ReviewsItemPropsType): JSX.Element {\n  const {comment, rating, date, user: {name, avatarUrl}} = review;\n  const [dashedDate, shownDate] = formatReviewDate(date);\n\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={avatarUrl} width=\"54\" height=\"54\" alt=\"Reviews avatar\" />\n        </div>\n        <span className=\"reviews__user-name\">\n          {name}\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{width: `${getRatingWidth(rating)}%`}}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {comment}\n        </p>\n        <time className=\"reviews__time\" dateTime={dashedDate}>{shownDate}</time>\n      </div>\n    </li>\n  );\n}\n\nexport default ReviewsItem;\n","import { useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewsItem from './reviews-item';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSortedOfferReviews } from '../../../store/reducers/reviews-data/selectors';\nimport { fetchOfferReviewsAction } from '../../../services/api-actions';\n\n\ntype ParamsPropsType = {\n  id: string,\n}\n\nfunction ReviewsList(): JSX.Element {\n\n  const paramsProps = useParams<ParamsPropsType>();\n\n  const reviews = useSelector(getSortedOfferReviews);\n\n  const dispatch = useDispatch();\n\n  const fetchOfferReviews = useCallback((id: string) => {\n    dispatch(fetchOfferReviewsAction(paramsProps.id));\n  }, [dispatch, paramsProps.id]);\n\n  useEffect(() => {\n    fetchOfferReviews(paramsProps.id);\n  }, [fetchOfferReviews, paramsProps.id]);\n\n  return (\n    <>\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{reviews.length}</span></h2>\n      <ul className=\"reviews__list\">\n        {\n          reviews\n            .map((review) => <ReviewsItem key={`${review.user.name}-${review.id}`} review={review}/>)\n        }\n      </ul>\n    </>\n  );\n}\n\nexport default ReviewsList;\n","type GoodsType = {\n  goods: string[],\n}\n\nfunction GoodsList({goods}: GoodsType): JSX.Element {\n  return (\n    <div className=\"property__inside\">\n      <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n      <ul className=\"property__inside-list\">\n        {goods.map((good) => (\n          <li key={`${good}-1`} className=\"property__inside-item\">\n            {good}\n          </li>))}\n      </ul>\n    </div>\n  );\n}\n\nexport default GoodsList;\n","type GalleryItemPropsType = {\n  itemSource: string,\n}\n\nfunction GalleryItem({itemSource}: GalleryItemPropsType): JSX.Element {\n  return (\n    <div className=\"property__image-wrapper\">\n      <img className=\"property__image\" src={itemSource} alt=\"Great Housing!\" />\n    </div>\n  );\n}\n\nexport default GalleryItem;\n","import GalleryItem from './gallery-item';\n\ntype GalleryPropsType = {\n  galleryItems: string[],\n}\n\nfunction InteriorGallery({galleryItems}: GalleryPropsType): JSX.Element {\n  return (\n    <div className=\"property__gallery\">\n      {\n        galleryItems.map((itemSource) => <GalleryItem key={itemSource} itemSource={itemSource} />)\n      }\n    </div>\n  );\n}\n\nexport default InteriorGallery;\n","import { LoadingStatus } from '../../../const';\nimport { OfferType } from '../../../types/offer-type';\nimport { State } from '../../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nexport const getNearbyOffers = (state: State): OfferType[] => state[NameSpace.nearbyOffers].nearbyOffers;\nexport const getNearbyOffersLoadingStatus = (state: State): LoadingStatus => state[NameSpace.nearbyOffers].nearbyOffersLoadingStatus;\n","import { useParams } from 'react-router-dom';\nimport { MouseEvent, useCallback, useEffect } from 'react';\nimport { getRatingWidth, getRandomItems } from '../../../utils/utils';\nimport Map from '../../layout/map/map';\nimport OffersList from '../../layout/offers-list/offers-list';\nimport ReviewsForm from '../../layout/reviews-form/reviews-form';\nimport ReviewsList from '../../layout/reviews-list/review-list';\nimport { CustomClasses, AuthStatus, LoadingStatus } from '../../../const';\nimport GoodsList from './goods-list';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchNearbyOffersAction, fetchOfferReviewsAction, toggleIsFavoriteAction } from '../../../services/api-actions';\nimport LoaderWrapper from '../../layout/loader-wrapper/loader-wrapper';\nimport InteriorGallery from './interior-gallery';\nimport { getAuthStatus } from '../../../store/reducers/user-auth/selectors';\nimport { getNearbyOffers, getNearbyOffersLoadingStatus } from '../../../store/reducers/nearby-data/selectors';\nimport { getOfferReviewsLoadingStatus } from '../../../store/reducers/reviews-data/selectors';\nimport { OfferType } from '../../../types/offer-type';\n\nconst MAX_IMAGES_COUNT = 6;\n\ntype ParamsPropsType = {\n  id: string,\n}\n\ntype OfferPropsType = {\n  currentOffer: OfferType,\n}\n\nfunction OfferContainer({currentOffer}: OfferPropsType): JSX.Element {\n\n  const paramsProps = useParams<ParamsPropsType>();\n\n  const authStatus = useSelector(getAuthStatus);\n  const nearbyOffers = useSelector(getNearbyOffers);\n  const nearbyOffersLoadingStatus = useSelector(getNearbyOffersLoadingStatus);\n  const offerReviewsLoadingStatus = useSelector(getOfferReviewsLoadingStatus);\n\n  const dispatch = useDispatch();\n\n  const fetchNearbyOffers = useCallback((id: string) => {\n    dispatch(fetchNearbyOffersAction(id));\n  }, [dispatch]);\n\n  const fetchOfferReviews = useCallback((id: string) => {\n    dispatch(fetchOfferReviewsAction(id));\n  }, [dispatch]);\n\n  const toggleIsFavorite = (id: number, favoriteStatus: number) => {\n    dispatch(toggleIsFavoriteAction(id, favoriteStatus));\n  };\n\n  useEffect(() => {\n    fetchNearbyOffers(paramsProps.id);\n    fetchOfferReviews(paramsProps.id);\n  }, [fetchNearbyOffers, fetchOfferReviews, paramsProps.id]);\n\n  const isAuth = authStatus === AuthStatus.Auth;\n  const {images, description, isPremium, isFavorite, title, rating, type, bedrooms, maxAdults, price, goods, host:{avatarUrl, isPro, name}} = currentOffer;\n\n  const galleryItems = getRandomItems(images, MAX_IMAGES_COUNT);\n\n  const handleFavoriteButtonClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    evt.preventDefault();\n    const favoriteStatus = +(!isFavorite);\n    toggleIsFavorite(+paramsProps.id, favoriteStatus);\n  };\n\n  return (\n    <main className=\"page__main page__main--property\" data-testid=\"offer-container\">\n      <section className=\"property\">\n        <div className=\"property__gallery-container container\">\n          <InteriorGallery galleryItems={galleryItems}/>\n        </div>\n        <div className=\"property__container container\">\n          <div className=\"property__wrapper\">\n            {isPremium &&\n        <div className=\"property__mark\">\n          <span>Premium</span>\n        </div>}\n            <div className=\"property__name-wrapper\">\n              <h1 className=\"property__name\">\n                {title}\n              </h1>\n              <button className={`property__bookmark-button ${currentOffer?.isFavorite ? CustomClasses.CurrentOffer.buttonFavoriteClassName : ''} button`} type=\"button\" onClick={handleFavoriteButtonClick}>\n                <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n                  <use xlinkHref=\"#icon-bookmark\"></use>\n                </svg>\n                <span className=\"visually-hidden\">{`${isFavorite ? 'In ' : 'To '}bookmarks`}</span>\n              </button>\n            </div>\n            <div className=\"property__rating rating\">\n              <div className=\"property__stars rating__stars\">\n                <span style={{width: `${getRatingWidth(rating)}%`}}></span>\n                <span className=\"visually-hidden\">Rating</span>\n              </div>\n              <span className=\"property__rating-value rating__value\">{rating}</span>\n            </div>\n            <ul className=\"property__features\">\n              <li className=\"property__feature property__feature--entire\">\n                {type}\n              </li>\n              <li className=\"property__feature property__feature--bedrooms\">\n                {bedrooms} Bedrooms\n              </li>\n              <li className=\"property__feature property__feature--adults\">\n          Max {maxAdults} adults\n              </li>\n            </ul>\n            <div className=\"property__price\">\n              <b className=\"property__price-value\">&euro;{price}</b>\n              <span className=\"property__price-text\">&nbsp;night</span>\n            </div>\n            {<GoodsList goods={goods} />}\n            <div className=\"property__host\">\n              <h2 className=\"property__host-title\">Meet the host</h2>\n              <div className=\"property__host-user user\">\n                <div className={`property__avatar-wrapper ${isPro ? CustomClasses.CurrentOffer.divProClassName : ''} user__avatar-wrapper`}>\n                  <img className=\"property__avatar user__avatar\" src={avatarUrl} width=\"74\" height=\"74\" alt=\"Host avatar\" />\n                </div>\n                <span className=\"property__user-name\">\n                  {name}\n                </span>\n                {isPro &&\n            <span className=\"property__user-status\">\n            Pro\n            </span>}\n              </div>\n              <div className=\"property__description\">\n                <p className=\"property__text\">\n                  {description}\n                </p>\n              </div>\n            </div>\n            <section className=\"property__reviews reviews\">\n              <LoaderWrapper isLoad={offerReviewsLoadingStatus === LoadingStatus.Succeeded}>\n                <ReviewsList />\n              </LoaderWrapper>\n              {\n                isAuth && <ReviewsForm />\n              }\n            </section>\n          </div>\n        </div>\n        <section className=\"property__map map\">\n          <LoaderWrapper isLoad={nearbyOffersLoadingStatus === LoadingStatus.Succeeded} >\n            <Map offers={nearbyOffers} selectedOfferId={null} currentOffer={currentOffer}/>\n          </LoaderWrapper>\n        </section>\n      </section>\n      <div className=\"container\">\n        <section className=\"near-places places\">\n          <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n          <LoaderWrapper isLoad={nearbyOffersLoadingStatus === LoadingStatus.Succeeded} >\n            <OffersList offers={nearbyOffers} customClasses={CustomClasses.NearPlaces} />\n          </LoaderWrapper>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default OfferContainer;\n","import Header from '../../layout/header/header';\nimport { Link } from 'react-router-dom';\nimport './not-found.css';\nimport { AppRoute } from '../../../const';\n\nfunction NotFoundScreen(): JSX.Element {\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header renderAuth />\n\n      <main className=\"page__main\">\n        <div className=\"container\">\n          <section className=\"not-found\">\n            <h1 className=\"visually-hidden\">Page not found</h1>\n            <div className=\"not-found__status-wrapper\">\n              <div className=\"not-found__status\"><b>404</b>\n                <svg width=\"28\" height=\"43\" viewBox=\"0 0 28 43\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.62.914a1.166 1.166 0 0 1 2.278.504L15.33 40.086a1.166 1.166 0 1 1-2.277-.504L21.621.914z\" fill=\"#4481C3\"/></svg><span className=\"not-found__status\">Page not found</span>\n              </div>\n              <p className=\"not-found__status-description\">\n                <Link className=\"not-found__link\" to={AppRoute.Main} title=\"Main Page\">\n                  Back to main page\n                </Link>\n              </p>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default NotFoundScreen;\n","import { LoadingStatus } from '../../../const';\nimport { OfferType } from '../../../types/offer-type';\nimport { State } from '../../../types/state';\nimport { NameSpace } from '../root-reducer';\n\n\nexport const getCurrentOffer = (state: State): OfferType | null => state[NameSpace.currentOffer].currentOffer;\nexport const getCurrentOfferLoadingStatus = (state: State): LoadingStatus => state[NameSpace.currentOffer].currentOfferLoadingStatus;\n","import { useParams } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { useCallback, useEffect} from 'react';\nimport Header from '../../layout/header/header';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCurrentOfferAction } from '../../../services/api-actions';\nimport LoaderWrapper from '../../layout/loader-wrapper/loader-wrapper';\nimport OfferContainer from './offer-container';\nimport { OfferType } from '../../../types/offer-type';\nimport NotFoundScreen from '../not-found/not-found';\nimport { AppRoute, AuthStatus, LoadingStatus } from '../../../const';\nimport { getAuthStatus } from '../../../store/reducers/user-auth/selectors';\nimport { getCurrentOffer, getCurrentOfferLoadingStatus } from '../../../store/reducers/current-offer-data/selectors';\n\ntype ParamsPropsType = {\n  id: string,\n}\n\nfunction OfferScreen(): JSX.Element {\n  const paramsProps = useParams<ParamsPropsType>();\n\n  const authStatus = useSelector(getAuthStatus);\n  const currentOffer = useSelector(getCurrentOffer);\n  const currentOfferLoadingStatus = useSelector(getCurrentOfferLoadingStatus);\n\n  const dispatch = useDispatch();\n\n  const fetchCurrentOffer = useCallback((id: string) => {\n    dispatch(fetchCurrentOfferAction(paramsProps.id));\n  }, [dispatch, paramsProps.id]);\n\n  useEffect(() => {\n    fetchCurrentOffer(paramsProps.id);\n  }, [fetchCurrentOffer, paramsProps.id]);\n\n  useEffect(() => {\n    if(authStatus === AuthStatus.NoAuth) {\n      <Redirect to={AppRoute.SignIn} />;\n    }\n  }, [authStatus]);\n\n  if(currentOfferLoadingStatus === LoadingStatus.Failed) {\n    return <NotFoundScreen />;\n  }\n\n  return (\n    <div className=\"page\">\n      <Header renderAuth />\n\n      <LoaderWrapper isLoad={currentOfferLoadingStatus === LoadingStatus.Succeeded} >\n        <OfferContainer currentOffer={currentOffer as OfferType}/>\n      </LoaderWrapper>\n    </div>\n  );\n}\n\nexport default OfferScreen;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { AppRoute, AuthStatus } from '../../const';\nimport { getAuthStatus } from '../../store/reducers/user-auth/selectors';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n}\n\nfunction PrivateRoute({exact, path, render}: PrivateRouteProps): JSX.Element {\n\n  const authStatus = useSelector(getAuthStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(renderProps) => (\n        authStatus === AuthStatus.Auth\n          ? render(renderProps)\n          : <Redirect to={AppRoute.SignIn} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import MainScreen from '../screens/main-screen/main-screen';\nimport { Switch, Route } from 'react-router-dom';\nimport SignInScreen from '../screens/sign-in-screen/sign-in-screen';\nimport FavoritesScreen from '../screens/favorites-screen/favorites-screen';\nimport OfferScreen from '../screens/offer-screen/offer-screen';\nimport NotFoundScreen from '../screens/not-found/not-found';\nimport { AppRoute } from '../../const';\nimport PrivateRoute from '../routes/private-route';\n\n\nfunction App(): JSX.Element {\n  return (\n    <Switch>\n      <Route exact path={AppRoute.Main}>\n        <MainScreen />\n      </Route>\n      <Route exact path={AppRoute.SignIn}>\n        <SignInScreen />\n      </Route>\n      <PrivateRoute exact path={AppRoute.Favorites} render={() => <FavoritesScreen />}>\n      </PrivateRoute>\n      <Route exact path={AppRoute.Room}>\n        <OfferScreen />\n      </Route>\n      <Route>\n        <NotFoundScreen />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport {Middleware} from 'redux';\nimport {ActionType} from '../../types/action';\nimport { State } from '../../types/state';\n\n\nexport const redirect: Middleware<unknown, State> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n\n        return next(action);\n      };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { createAPI } from './services/api';\nimport { requireAuthorization } from './store/action';\nimport { AuthStatus } from './const';\nimport { checkAuthAction } from './services/api-actions';\nimport { redirect } from './store/middlewares/redirect';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { rootReducer } from './store/reducers/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Router as BrowserRouter } from 'react-router-dom';\nimport browserHistory from './browser-history';\n\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthStatus.NoAuth)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(checkAuthAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={browserHistory}>\n        <ToastContainer />\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n","import axios, {AxiosInstance, AxiosResponse, AxiosError, AxiosRequestConfig} from 'axios';\nimport { HttpCode } from '../const';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if(token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n"],"sourceRoot":""}